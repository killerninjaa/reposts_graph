{
  "version": 3,
  "sources": ["../../graphology-utils/getters.js", "../../graphology-layout-forceatlas2/helpers.js", "../../graphology-layout-forceatlas2/defaults.js"],
  "sourcesContent": ["/**\n * Graphology Weight Getter\n * =========================\n *\n * Function creating weight getters.\n */\nfunction coerceWeight(value) {\n  // Ensuring target value is a correct number\n  if (typeof value !== 'number' || isNaN(value)) return 1;\n\n  return value;\n}\n\nfunction createNodeValueGetter(nameOrFunction, defaultValue) {\n  var getter = {};\n\n  var coerceToDefault = function (v) {\n    if (typeof v === 'undefined') return defaultValue;\n\n    return v;\n  };\n\n  if (typeof defaultValue === 'function') coerceToDefault = defaultValue;\n\n  var get = function (attributes) {\n    return coerceToDefault(attributes[nameOrFunction]);\n  };\n\n  var returnDefault = function () {\n    return coerceToDefault(undefined);\n  };\n\n  if (typeof nameOrFunction === 'string') {\n    getter.fromAttributes = get;\n    getter.fromGraph = function (graph, node) {\n      return get(graph.getNodeAttributes(node));\n    };\n    getter.fromEntry = function (node, attributes) {\n      return get(attributes);\n    };\n  } else if (typeof nameOrFunction === 'function') {\n    getter.fromAttributes = function () {\n      throw new Error(\n        'graphology-utils/getters/createNodeValueGetter: irrelevant usage.'\n      );\n    };\n    getter.fromGraph = function (graph, node) {\n      return coerceToDefault(\n        nameOrFunction(node, graph.getNodeAttributes(node))\n      );\n    };\n    getter.fromEntry = function (node, attributes) {\n      return coerceToDefault(nameOrFunction(node, attributes));\n    };\n  } else {\n    getter.fromAttributes = returnDefault;\n    getter.fromGraph = returnDefault;\n    getter.fromEntry = returnDefault;\n  }\n\n  return getter;\n}\n\nfunction createEdgeValueGetter(nameOrFunction, defaultValue) {\n  var getter = {};\n\n  var coerceToDefault = function (v) {\n    if (typeof v === 'undefined') return defaultValue;\n\n    return v;\n  };\n\n  if (typeof defaultValue === 'function') coerceToDefault = defaultValue;\n\n  var get = function (attributes) {\n    return coerceToDefault(attributes[nameOrFunction]);\n  };\n\n  var returnDefault = function () {\n    return coerceToDefault(undefined);\n  };\n\n  if (typeof nameOrFunction === 'string') {\n    getter.fromAttributes = get;\n    getter.fromGraph = function (graph, edge) {\n      return get(graph.getEdgeAttributes(edge));\n    };\n    getter.fromEntry = function (edge, attributes) {\n      return get(attributes);\n    };\n    getter.fromPartialEntry = getter.fromEntry;\n    getter.fromMinimalEntry = getter.fromEntry;\n  } else if (typeof nameOrFunction === 'function') {\n    getter.fromAttributes = function () {\n      throw new Error(\n        'graphology-utils/getters/createEdgeValueGetter: irrelevant usage.'\n      );\n    };\n    getter.fromGraph = function (graph, edge) {\n      // TODO: we can do better, check #310\n      var extremities = graph.extremities(edge);\n      return coerceToDefault(\n        nameOrFunction(\n          edge,\n          graph.getEdgeAttributes(edge),\n          extremities[0],\n          extremities[1],\n          graph.getNodeAttributes(extremities[0]),\n          graph.getNodeAttributes(extremities[1]),\n          graph.isUndirected(edge)\n        )\n      );\n    };\n    getter.fromEntry = function (e, a, s, t, sa, ta, u) {\n      return coerceToDefault(nameOrFunction(e, a, s, t, sa, ta, u));\n    };\n    getter.fromPartialEntry = function (e, a, s, t) {\n      return coerceToDefault(nameOrFunction(e, a, s, t));\n    };\n    getter.fromMinimalEntry = function (e, a) {\n      return coerceToDefault(nameOrFunction(e, a));\n    };\n  } else {\n    getter.fromAttributes = returnDefault;\n    getter.fromGraph = returnDefault;\n    getter.fromEntry = returnDefault;\n    getter.fromMinimalEntry = returnDefault;\n  }\n\n  return getter;\n}\n\nexports.createNodeValueGetter = createNodeValueGetter;\nexports.createEdgeValueGetter = createEdgeValueGetter;\nexports.createEdgeWeightGetter = function (name) {\n  return createEdgeValueGetter(name, coerceWeight);\n};\n", "/**\n * Graphology ForceAtlas2 Helpers\n * ===============================\n *\n * Miscellaneous helper functions.\n */\n\n/**\n * Constants.\n */\nvar PPN = 10;\nvar PPE = 3;\n\n/**\n * Very simple Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nexports.assign = function (target) {\n  target = target || {};\n\n  var objects = Array.prototype.slice.call(arguments).slice(1),\n    i,\n    k,\n    l;\n\n  for (i = 0, l = objects.length; i < l; i++) {\n    if (!objects[i]) continue;\n\n    for (k in objects[i]) target[k] = objects[i][k];\n  }\n\n  return target;\n};\n\n/**\n * Function used to validate the given settings.\n *\n * @param  {object}      settings - Settings to validate.\n * @return {object|null}\n */\nexports.validateSettings = function (settings) {\n  if ('linLogMode' in settings && typeof settings.linLogMode !== 'boolean')\n    return {message: 'the `linLogMode` setting should be a boolean.'};\n\n  if (\n    'outboundAttractionDistribution' in settings &&\n    typeof settings.outboundAttractionDistribution !== 'boolean'\n  )\n    return {\n      message:\n        'the `outboundAttractionDistribution` setting should be a boolean.'\n    };\n\n  if ('adjustSizes' in settings && typeof settings.adjustSizes !== 'boolean')\n    return {message: 'the `adjustSizes` setting should be a boolean.'};\n\n  if (\n    'edgeWeightInfluence' in settings &&\n    typeof settings.edgeWeightInfluence !== 'number'\n  )\n    return {\n      message: 'the `edgeWeightInfluence` setting should be a number.'\n    };\n\n  if (\n    'scalingRatio' in settings &&\n    !(typeof settings.scalingRatio === 'number' && settings.scalingRatio >= 0)\n  )\n    return {message: 'the `scalingRatio` setting should be a number >= 0.'};\n\n  if (\n    'strongGravityMode' in settings &&\n    typeof settings.strongGravityMode !== 'boolean'\n  )\n    return {message: 'the `strongGravityMode` setting should be a boolean.'};\n\n  if (\n    'gravity' in settings &&\n    !(typeof settings.gravity === 'number' && settings.gravity >= 0)\n  )\n    return {message: 'the `gravity` setting should be a number >= 0.'};\n\n  if (\n    'slowDown' in settings &&\n    !(typeof settings.slowDown === 'number' || settings.slowDown >= 0)\n  )\n    return {message: 'the `slowDown` setting should be a number >= 0.'};\n\n  if (\n    'barnesHutOptimize' in settings &&\n    typeof settings.barnesHutOptimize !== 'boolean'\n  )\n    return {message: 'the `barnesHutOptimize` setting should be a boolean.'};\n\n  if (\n    'barnesHutTheta' in settings &&\n    !(\n      typeof settings.barnesHutTheta === 'number' &&\n      settings.barnesHutTheta >= 0\n    )\n  )\n    return {message: 'the `barnesHutTheta` setting should be a number >= 0.'};\n\n  return null;\n};\n\n/**\n * Function generating a flat matrix for both nodes & edges of the given graph.\n *\n * @param  {Graph}    graph         - Target graph.\n * @param  {function} getEdgeWeight - Edge weight getter function.\n * @return {object}                 - Both matrices.\n */\nexports.graphToByteArrays = function (graph, getEdgeWeight) {\n  var order = graph.order;\n  var size = graph.size;\n  var index = {};\n  var j;\n\n  // NOTE: float32 could lead to issues if edge array needs to index large\n  // number of nodes.\n  var NodeMatrix = new Float32Array(order * PPN);\n  var EdgeMatrix = new Float32Array(size * PPE);\n\n  // Iterate through nodes\n  j = 0;\n  graph.forEachNode(function (node, attr) {\n    // Node index\n    index[node] = j;\n\n    // Populating byte array\n    NodeMatrix[j] = attr.x;\n    NodeMatrix[j + 1] = attr.y;\n    NodeMatrix[j + 2] = 0; // dx\n    NodeMatrix[j + 3] = 0; // dy\n    NodeMatrix[j + 4] = 0; // old_dx\n    NodeMatrix[j + 5] = 0; // old_dy\n    NodeMatrix[j + 6] = 1; // mass\n    NodeMatrix[j + 7] = 1; // convergence\n    NodeMatrix[j + 8] = attr.size || 1;\n    NodeMatrix[j + 9] = attr.fixed ? 1 : 0;\n    j += PPN;\n  });\n\n  // Iterate through edges\n  j = 0;\n  graph.forEachEdge(function (edge, attr, source, target, sa, ta, u) {\n    var sj = index[source];\n    var tj = index[target];\n\n    var weight = getEdgeWeight(edge, attr, source, target, sa, ta, u);\n\n    // Incrementing mass to be a node's weighted degree\n    NodeMatrix[sj + 6] += weight;\n    NodeMatrix[tj + 6] += weight;\n\n    // Populating byte array\n    EdgeMatrix[j] = sj;\n    EdgeMatrix[j + 1] = tj;\n    EdgeMatrix[j + 2] = weight;\n    j += PPE;\n  });\n\n  return {\n    nodes: NodeMatrix,\n    edges: EdgeMatrix\n  };\n};\n\n/**\n * Function applying the layout back to the graph.\n *\n * @param {Graph}         graph         - Target graph.\n * @param {Float32Array}  NodeMatrix    - Node matrix.\n * @param {function|null} outputReducer - A node reducer.\n */\nexports.assignLayoutChanges = function (graph, NodeMatrix, outputReducer) {\n  var i = 0;\n\n  graph.updateEachNodeAttributes(function (node, attr) {\n    attr.x = NodeMatrix[i];\n    attr.y = NodeMatrix[i + 1];\n\n    i += PPN;\n\n    return outputReducer ? outputReducer(node, attr) : attr;\n  });\n};\n\n/**\n * Function reading the positions (only) from the graph, to write them in the matrix.\n *\n * @param {Graph}        graph      - Target graph.\n * @param {Float32Array} NodeMatrix - Node matrix.\n */\nexports.readGraphPositions = function (graph, NodeMatrix) {\n  var i = 0;\n\n  graph.forEachNode(function (node, attr) {\n    NodeMatrix[i] = attr.x;\n    NodeMatrix[i + 1] = attr.y;\n\n    i += PPN;\n  });\n};\n\n/**\n * Function collecting the layout positions.\n *\n * @param  {Graph}         graph         - Target graph.\n * @param  {Float32Array}  NodeMatrix    - Node matrix.\n * @param  {function|null} outputReducer - A nodes reducer.\n * @return {object}                      - Map to node positions.\n */\nexports.collectLayoutChanges = function (graph, NodeMatrix, outputReducer) {\n  var nodes = graph.nodes(),\n    positions = {};\n\n  for (var i = 0, j = 0, l = NodeMatrix.length; i < l; i += PPN) {\n    if (outputReducer) {\n      var newAttr = Object.assign({}, graph.getNodeAttributes(nodes[j]));\n      newAttr.x = NodeMatrix[i];\n      newAttr.y = NodeMatrix[i + 1];\n      newAttr = outputReducer(nodes[j], newAttr);\n      positions[nodes[j]] = {\n        x: newAttr.x,\n        y: newAttr.y\n      };\n    } else {\n      positions[nodes[j]] = {\n        x: NodeMatrix[i],\n        y: NodeMatrix[i + 1]\n      };\n    }\n\n    j++;\n  }\n\n  return positions;\n};\n\n/**\n * Function returning a web worker from the given function.\n *\n * @param  {function}  fn - Function for the worker.\n * @return {DOMString}\n */\nexports.createWorker = function createWorker(fn) {\n  var xURL = window.URL || window.webkitURL;\n  var code = fn.toString();\n  var objectUrl = xURL.createObjectURL(\n    new Blob(['(' + code + ').call(this);'], {type: 'text/javascript'})\n  );\n  var worker = new Worker(objectUrl);\n  xURL.revokeObjectURL(objectUrl);\n\n  return worker;\n};\n", "/**\n * Graphology ForceAtlas2 Layout Default Settings\n * ===============================================\n */\nmodule.exports = {\n  linLogMode: false,\n  outboundAttractionDistribution: false,\n  adjustSizes: false,\n  edgeWeightInfluence: 1,\n  scalingRatio: 1,\n  strongGravityMode: false,\n  gravity: 1,\n  slowDown: 1,\n  barnesHutOptimize: false,\n  barnesHutTheta: 0.5\n};\n"],
  "mappings": "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",
  "names": []
}
